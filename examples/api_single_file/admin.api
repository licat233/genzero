syntax = "v1"

info (
  title: admin
  author: licat
  desc: Generated by genzero@v1.1.0-bate.1 (https://github.com/licat233/genzero)
)

// ------------------------------ Import Start ------------------------------

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom import start]

// The content in this block will not be updated

//[custom import end]

// ------------------------------ Import End ------------------------------

// ------------------------------ Struct Start ------------------------------

//--------- base struct start---------

//枚举
type Enum {

  Label interface{} `json:"label"` //名

  Value interface{} `json:"value"` //值

}

//枚举列表
type Enums {

  List []Enum `json:"list"` //枚举列表数据

}

//选项
type Option {

  Title string `json:"title"` //名

  Value int64 `json:"value"` //值

}

//选项列表
type Options {

  List []Option `json:"list"` //选项列表数据

}

//树形选项
type TreeOption {

  Title string `json:"title"` //名

  Value int64 `json:"value"` //值

  Children []TreeOption `json:"children,optional"` //子集

}

//树形选项列表
type TreeOptions {

  List []TreeOption `json:"list"` //树形选项列表数据

}

//jwt token
type JwtToken {

  AccessToken string `json:"accessToken"` //token

  AccessExpire int64 `json:"accessExpire"` //expire

  RefreshAfter int64 `json:"refreshAfter"` //refresh at

}

//列表数据请求
type ListReq {

  PageSize int64 `json:"pageSize,optional,default=20"` //页面容量，默认20，可选

  Page int64 `json:"page,optional,default=1"` //当前页码，默认1，可选

  Current int64 `json:"current,optional,default=1"` //当前页码，默认1，用于对接umijs，可选

  Keyword string `json:"keyword,optional"` //关键词，可选

}

//通过ID请求
type ByIdReq {

  Id int64 `form:"id"` //主键

}

//空请求
type NilReq {

}

//空响应
type NilResp {

}

//空响应
type Resp {

  Body interface{} `json:"body"` //响应数据

}

//验证码响应
type CaptchaResp {

  CaptchaId string `json:"captchaId"` //captcha id

  ExpiresAt int64 `json:"expiresAt"` //expires time

}

//规范响应体
type BaseResp {

  Status bool `json:"status"` //响应状态

  Success bool `json:"success"` //响应状态，用于对接umijs

  Message string `json:"message,optional,omitempty"` //给予的提示信息

  Data interface{} `json:"data,optional,omitempty"` //【选填】响应的业务数据

  Total int64 `json:"total,optional,omitempty"` //【选填】数据总个数

  PageSize int64 `json:"pageSize,optional,omitempty"` //【选填】单页数量

  Current int64 `json:"current,optional,omitempty"` //【选填】当前页码，用于对接umijs

  Page int64 `json:"page,optional,omitempty"` //【选填】当前页码

  TotalPage int64 `json:"totalPage,optional,omitempty"` //【选填】自增项，总共有多少页，根据前端的pageSize来计算

  ErrorCode int64 `json:"errorCode,optional,omitempty"` //【选填】错误类型代码：400错误请求，401未授权，500服务器内部错误，200成功

  ErrorMessage string `json:"errorMessage,optional,omitempty"` //【选填】向用户显示消息

  TraceMessage string `json:"traceMessage,optional,omitempty"` //【选填】调试错误信息，请勿在生产环境下使用，可有可无

  ShowType int64 `json:"showType,optional,omitempty"` //【选填】错误显示类型：0.不提示错误;1.警告信息提示；2.错误信息提示；4.通知提示；9.页面跳转

  TraceId string `json:"traceId,optional,omitempty"` //【选填】方便后端故障排除：唯一的请求ID

  Host string `json:"host,optional,omitempty"` //【选填】方便后端故障排除：当前访问服务器的主机

}

//--------- base struct end---------

//管理员
type Adminer {

  Id int64 `json:"id"` //表主键

  Uuid string `json:"uuid"` //唯一识别码

  Name string `json:"name"` //管理员名称

  Avatar string `json:"avatar"` //头像

  Passport string `json:"passport"` //账号

  Password string `json:"password"` //密码

  Email string `json:"email"` //邮箱

  Status int64 `json:"status"` //账号状态，是否可用

  IsSuperAdmin int64 `json:"isSuperAdmin"` //是否为超级管理员

  LoginCount int64 `json:"loginCount"` //登录次数

  LastLogin int64 `json:"lastLogin"` //最后一次登录时间

}

//添加管理员请求
type AddAdminerReq {

  Id int64 `json:"id"` //表主键

  Uuid string `json:"uuid"` //唯一识别码

  Name string `json:"name"` //管理员名称

  Avatar string `json:"avatar"` //头像

  Passport string `json:"passport"` //账号

  Password string `json:"password"` //密码

  Email string `json:"email"` //邮箱

  Status int64 `json:"status"` //账号状态，是否可用

  IsSuperAdmin int64 `json:"isSuperAdmin"` //是否为超级管理员

  LoginCount int64 `json:"loginCount"` //登录次数

  LastLogin int64 `json:"lastLogin"` //最后一次登录时间

}

//更新管理员请求
type PutAdminerReq {

  Id int64 `json:"id"` //表主键

  Uuid string `json:"uuid"` //唯一识别码

  Name string `json:"name"` //管理员名称

  Avatar string `json:"avatar"` //头像

  Passport string `json:"passport"` //账号

  Password string `json:"password"` //密码

  Email string `json:"email"` //邮箱

  Status int64 `json:"status"` //账号状态，是否可用

  IsSuperAdmin int64 `json:"isSuperAdmin"` //是否为超级管理员

  LoginCount int64 `json:"loginCount"` //登录次数

  LastLogin int64 `json:"lastLogin"` //最后一次登录时间

}

//删除管理员请求
type DelAdminerReq {

  Id int64 `json:"id"` //管理员 ID

}

//获取管理员请求
type GetAdminerReq {

  Id int64 `form:"id"` //管理员 ID

}

//获取管理员列表请求
type GetAdminerListReq {

  PageSize int64 `json:"pageSize,optional,default=20"` //页面容量，默认20，可选

  Page int64 `json:"page,optional,default=1"` //当前页码，默认1，可选

  Current int64 `json:"current,optional,default=1"` //当前页码，默认1，用于对接umijs，可选

  Keyword string `json:"keyword,optional"` //关键词，可选

  Id int64 `json:"id"` //表主键

  Uuid string `json:"uuid"` //唯一识别码

  Name string `json:"name"` //管理员名称

  Avatar string `json:"avatar"` //头像

  Passport string `json:"passport"` //账号

  Password string `json:"password"` //密码

  Email string `json:"email"` //邮箱

  Status int64 `json:"status"` //账号状态，是否可用

  IsSuperAdmin int64 `json:"isSuperAdmin"` //是否为超级管理员

  LoginCount int64 `json:"loginCount"` //登录次数

  LastLogin int64 `json:"lastLogin"` //最后一次登录时间

}

//获取管理员枚举请求
type GetAdminerEnumsReq {

  ParentId int64 `form:"parentId,optional,default=-1"` //父级ID

}

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom struct start]

// The content in this block will not be updated

//[custom struct end]

// ------------------------------ Struct End ------------------------------

@server(
  jwt: Auth
  group: adminer
  middleware: AuthMiddleware
  prefix: /v1/api/admin/adminer
)
service admin {

  @doc "添加管理员 基础API"
  @handler AddAdminer
  post /(AddAdminerReq) returns(BaseResp)

  @doc "更新管理员 基础API"
  @handler PutAdminer
  put /(PutAdminerReq) returns(BaseResp)

  @doc "获取管理员 基础API"
  @handler GetAdminer
  get /(GetAdminerReq) returns(BaseResp)

  @doc "删除管理员 基础API"
  @handler DelAdminer
  delete /(DelAdminerReq) returns(BaseResp)

  @doc "获取管理员列表 基础API"
  @handler GetAdminerList
  get /list(GetAdminerListReq) returns(BaseResp)

  @doc "获取管理员枚举列表 基础API"
  @handler GetAdminerEnums
  get /enums(GetAdminerEnumsReq) returns(BaseResp)

}

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom service start]

// The content in this block will not be updated

//[custom service end]