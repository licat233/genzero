syntax = "v1"

info (
  title: admin-api
  author: licat
  desc: Generated by genzero@v1.1.3-alpine.7 (https://github.com/licat233/genzero)
)

// ------------------------------ Import Start ------------------------------

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom import start]

//[custom import end]

// ------------------------------ Import End ------------------------------

// ------------------------------ Struct Start ------------------------------

//管理员
type Adminer {
  Id int64 `json:"id"` //表主键
  Uuid string `json:"uuid"` //唯一识别码
  Name string `json:"name"` //管理员名称
  Avatar string `json:"avatar"` //头像
  Passport string `json:"passport"` //账号
  Password string `json:"password"` //密码
  Email string `json:"email"` //邮箱
  Status int64 `json:"status"` //账号状态，是否可用
  IsSuperAdmin int64 `json:"is_super_admin"` //是否为超级管理员
  LoginCount int64 `json:"login_count"` //登录次数
  LastLogin int64 `json:"last_login"` //最后一次登录时间
}

//添加管理员请求
type AddAdminerReq {
  Name string `json:"name"` //管理员名称
  Avatar string `json:"avatar"` //头像
  Passport string `json:"passport"` //账号
  Password string `json:"password"` //密码
  Email string `json:"email"` //邮箱
  Status int64 `json:"status"` //账号状态，是否可用
  IsSuperAdmin int64 `json:"is_super_admin"` //是否为超级管理员
  LoginCount int64 `json:"login_count"` //登录次数
  LastLogin int64 `json:"last_login"` //最后一次登录时间
}

//更新管理员请求
type PutAdminerReq {
  Id int64 `json:"id"` //表主键
  Uuid string `json:"uuid"` //唯一识别码
  Name string `json:"name"` //管理员名称
  Avatar string `json:"avatar"` //头像
  Passport string `json:"passport"` //账号
  Password string `json:"password"` //密码
  Email string `json:"email"` //邮箱
  Status int64 `json:"status"` //账号状态，是否可用
  IsSuperAdmin int64 `json:"is_super_admin"` //是否为超级管理员
  LoginCount int64 `json:"login_count"` //登录次数
  LastLogin int64 `json:"last_login"` //最后一次登录时间
}

//删除管理员请求
type DelAdminerReq {
  Id int64 `json:"id"` //管理员 ID
}

//获取管理员请求
type GetAdminerReq {
  Id int64 `json:"id"` //管理员 ID
}

//获取管理员列表请求
type GetAdminerListReq {
  PageSize int64 `form:"page_size,optional,default=20"` //页面容量，默认20，可选
  Page int64 `form:"page,optional,default=1"` //当前页码，默认1，可选
  Current int64 `form:"current,optional,default=1"` //当前页码，默认1，用于对接umijs，可选
  Keyword string `form:"keyword,optional"` //关键词，可选
  Id int64 `form:"id,optional,default=-1"` //表主键
  Uuid string `form:"uuid,optional"` //唯一识别码
  Name string `form:"name,optional"` //管理员名称
  Avatar string `form:"avatar,optional"` //头像
  Passport string `form:"passport,optional"` //账号
  Password string `form:"password,optional"` //密码
  Email string `form:"email,optional"` //邮箱
  Status int64 `form:"status,optional,default=-1"` //账号状态，是否可用
  IsSuperAdmin int64 `form:"is_super_admin,optional,default=-1"` //是否为超级管理员
  LoginCount int64 `form:"login_count,optional,default=-1"` //登录次数
  LastLogin int64 `form:"last_login,optional,default=-1"` //最后一次登录时间
}

//获取管理员枚举请求
type GetAdminerEnumsReq {
  ParentId int64 `json:"parent_id,optional,default=-1"` //父级ID
}

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom struct start]

//[custom struct end]

// ------------------------------ Struct End ------------------------------

@server(
  jwt: Auth
  group: adminer
  middleware: AuthMiddleware
  prefix: /v1/api/admin/adminer
)
service admin {

  @doc "添加管理员 基础API"
  @handler AddAdminer
  post /(AddAdminerReq) returns(BaseResp)

  @doc "更新管理员 基础API"
  @handler PutAdminer
  put /(PutAdminerReq) returns(BaseResp)

  @doc "获取管理员 基础API"
  @handler GetAdminer
  get /(GetAdminerReq) returns(BaseResp)

  @doc "删除管理员 基础API"
  @handler DelAdminer
  delete /(DelAdminerReq) returns(BaseResp)

  @doc "获取管理员列表 基础API"
  @handler GetAdminerList
  get /list(GetAdminerListReq) returns(BaseResp)

  @doc "获取管理员枚举列表 基础API"
  @handler GetAdminerEnums
  get /enums(GetAdminerEnumsReq) returns(BaseResp)

}

// The content in this block will not be updated
// 此区块内的内容不会被更新
//[custom service start]

//[custom service end]